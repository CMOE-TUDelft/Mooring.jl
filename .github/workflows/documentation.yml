name: Documentation

on:
  push:
    branches:
      - main
      - develop 
    tags: '*'
  pull_request:

jobs:
  build:
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      # - uses: julia-actions/julia-buildpkg@v1
      # - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
            julia --project=. -e '
            using Pkg;
            Pkg.add(url="https://github.com/shagunTUD/Gridap.jl",rev="devMoor")
            Pkg.add(url="https://github.com/shagun751/WaveSpec.jl",rev="main");
            Pkg.instantiate();
            Pkg.precompile()'
    # steps:
    #   - uses: actions/checkout@v4
    #   - uses: julia-actions/setup-julia@v2
    #     with:
    #       version: '1'
    #   - uses: julia-actions/cache@v2
    #   - name: Install dependencies
    #     run: |
    #         julia --project=. -e '
    #         using Pkg;
    #         Pkg.add(url="https://github.com/shagunTUD/Gridap.jl",rev="devMoor")
    #         Pkg.add(url="https://github.com/shagun751/WaveSpec.jl",rev="main");
    #         Pkg.instantiate();
    #         Pkg.precompile()'
    #   # - name: Install dependencies
    #   #   run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
    #   - name: Build and deploy
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # If authenticating with GitHub Actions token
    #       DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # If authenticating with SSH deploy key
    #     run: julia --project=docs/ docs/make.jl